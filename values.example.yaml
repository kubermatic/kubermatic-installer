# ====== kubermatic ======
kubermatic:
  docker:
    # the base64 encoded docker authentication token
    secret: ""
  quay:
    # the base64 encoded quay.io authentication token
    secret: ""
  auth:
    # the full path to the openid connect token issuer. For example 'https://dev.kubermatic.io/dex'
    tokenIssuer: ""
    # the client id for openid connect
    clientID: ""
    # skip tls verification on the token issuer
    skipTokenIssuerTLSVerify: "false"
  # base64 encoded datacenters.yaml
  datacenters: ""
  # external domain for the kubermatic installation. For example 'dev.kubermatic.io'
  domain: ""
  # base64 encoded kubeconfig which gives admin access to all seed clusters
  kubeconfig: ""
  addons:
    # list of Addons to install into every user-cluster. All need to exist in the addons image
    defaultAddons: 
    - canal
    - dashboard
    - dns
    - heapster
    - kube-proxy
    - openvpn
    - rbac
  etcd:
    # PV size for the etcd StatefulSet of new clusters
    diskSize: "5Gi"
  controller:
    datacenterName: ""
    replicas: 2
    image:
      repository: "kubermatic/api"
      tag: "v2.6.5"
      pullPolicy: "IfNotPresent"
    addons:
      image:
        repository: "quay.io/kubermatic/addons"
        tag: "v0.1.0"
        pullPolicy: "IfNotPresent"
  api:
    replicas: 2
    image:
      repository: "kubermatic/api"
      tag: "v2.6.5"
      pullPolicy: "IfNotPresent"
  ui:
    replicas: 2
    image:
      repository: "kubermatic/ui-v2"
      tag: "v0.35"
      pullPolicy: "IfNotPresent"
    config: |
      {
        "show_demo_info": false
      }
  storeContainer: |
    command:
    - /bin/sh
    - -c
    - |
      set -euo pipefail
      s3-storeuploader store --endpoint minio.minio.svc.cluster.local:9000 --bucket kubermatic-etcd-backups --create-bucket --prefix $CLUSTER --file /backup/snapshot.db
      s3-storeuploader delete-old-revisions --endpoint minio.minio.svc.cluster.local:9000 --bucket kubermatic-etcd-backups --prefix $CLUSTER --file /backup/snapshot.db --max-revisions 20
    image: quay.io/kubermatic/s3-storer:v0.1.4
    name: store-container
    env:
    - name: ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: s3-credentials
          key: ACCESS_KEY_ID
    - name: SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: s3-credentials
          key: SECRET_ACCESS_KEY
    volumeMounts:
    - name: etcd-backup
      mountPath: /backup
  cleanupContainer: |
    command:
    - /bin/sh
    - -c
    - |
      set -euo pipefail
      s3-storeuploader delete-all --endpoint minio.minio.svc.cluster.local:9000 --bucket kubermatic-etcd-backups --prefix $CLUSTER
    image: quay.io/kubermatic/s3-storer:v0.1.4
    name: cleanup-container
    env:
    - name: ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: s3-credentials
          key: ACCESS_KEY_ID
    - name: SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: s3-credentials
          key: SECRET_ACCESS_KEY

# ====== cert-manager ======
# Default values for cert-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

image:
  repository: quay.io/jetstack/cert-manager-controller
  tag: v0.2.3
  pullPolicy: Always

createCustomResource: true

rbac:
  enabled: true

resources: {}

# ====== certs ======
certificates:
  domains:
  - "www.example.com"
  - "www.example2.com"

# ====== nginx-ingress-controller ======
##### Kubermatic ingress
nginx:
  hostNetwork: false
  asDaemonSet: false
  replicas: 3
  ignoreMasterTaint: false
  prometheus:
    port: "10254"
    scrape: "true"
  image:
    repository: quay.io/kubernetes-ingress-controller/nginx-ingress-controller
    tag: 0.14.0
  defaultBackend:
    image:
      repository: gcr.io/google_containers/defaultbackend
      tag: 1.4
  config: {}
#    load-balance: "least_conn"
# ====== nodeport-proxy ======
nodePortPoxy:
  image:
    repository: "quay.io/kubermatic/nodeport-proxy"
    tag: "v1.1"

# ====== oauth ======
##### Kubermatic oauth
dex:
  image:
    repository: "quay.io/coreos/dex"
    tag: "v2.10.0"
  replicas: 1
  ingress:
    host: ""
    path: "/dex"
#  connectors:
#  - type: github
#    id: github
#    name: GitHub
#    config:
#      clientID: some-client-id
#      clientSecret: some-client-secret
#      redirectURI: https://dev.kubermatic.io/dex/callback
#      orgs:
#      - name: kubermatic
#
#  clients:
#  - id: kubermatic
#    name: Kubermatic
#    secret: very-secret
#    RedirectURIs:
#    - http://localhost:8000
#    - https://dev.kubermatic.io
#    - http://localhost:8000/clusters
#    - https://dev.kubermatic.io/clusters
#
#  staticPasswordLogins:
#  - email: "admin@example.com"
#    # bcrypt hash of the string "password"
#    hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
#    username: "admin"
#    userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"

# ====== minio ======
minio:
  image:
    repository: "minio/minio"
    tag: "RELEASE.2018-06-09T03-43-35Z"
  storeSize: "100Gi"
  credentials:
    accessKey: "wtupllWfpMg414ZM5YkzZiUmgjh1vZdk"
    secretKey: "r89xkN9JvHJQppb5v7SEfkNkiC1vDcMySQFKxg6uDkE3gZfCeB7ZBfECyUOTywym"


# ========================
# ====== Monitoring ======
# ========================

# ====== alertmanager ======
alertmanager:
  version: v0.14.0
  # admin:loodse123
  auth: 'YWRtaW46JGFwcjEkUFR0Y3lQc0MkWVZFTk9nZmpiVE52RWtSeVk1ZjJULgo='
  host: ""
  config:
    global:
      slack_api_url: https://
    route:
      receiver: 'default'
      group_by: ['alertname', 'cluster']
      group_wait: 10s
      group_interval: 5m
      repeat_interval: 1h
    receivers:
    - name: 'default'
      slack_configs:
      - channel: '#alerting'
        send_resolved: true

# ====== grafana ======
grafana:
  user: YWRtaW4= # admin
  password: bG9vZHNlMTIz # loodse123
  host: ""
  image:
    repository: quay.io/coreos/monitoring-grafana
    tag: 5.0.0
  watcher:
    image:
      repository: quay.io/coreos/grafana-watcher
      tag: v0.0.8

# ====== kube-state-metrics ======
kubeStateMetrics:
  image:
    repository: quay.io/coreos/kube-state-metrics
    tag: v1.3.1
  resizer:
    image:
      repository: gcr.io/google_containers/addon-resizer
      tag: '1.0'
  rbacProxy:
    image:
      repository: quay.io/brancz/kube-rbac-proxy
      tag: v0.2.0

# ====== node-exporter ======
nodeExporter:
  image:
    repository: quay.io/prometheus/node-exporter
    tag: v0.15.2

# ====== prometheus ======
prometheus:
  # admin:loodse123
  auth: 'YWRtaW46JGFwcjEkUFR0Y3lQc0MkWVZFTk9nZmpiVE52RWtSeVk1ZjJULgo='
  version: 'v2.2.1'
  host: ""

# ====== prometheus-operator ======
prometheusOperator:
  image:
    repository: quay.io/coreos/prometheus-operator
    tag: v0.19.0

