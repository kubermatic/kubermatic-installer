<%! import os %>
<%! from base64 import b64encode %>

<%include file="dockercfgjson.makotemplate" />

### Kubermatic
kubermatic:
  docker:
    secret: "${var._dockercfgjson}"
  auth:
    tokenIssuer: https://${var.base_domain}/dex
    clientID: ${var.kubermatic_client_id}
  datacenters: "${read_file('datacenters.yaml') | b64encode}"
  domain: ${var.base_domain}
  kubeconfig: "${read_file('kubeconfig') | b64encode}"

### Storage
storage:
  provider: openstack-cinder
  zone: nova
  type: quobyte

### Nginx definition
nginx:
  hostNetwork: true
  asDaemonSet: true

certificates:
  domains:
  - ${var.base_domain}
  - alertmanager.${var.base_domain}
  - grafana.${var.base_domain}
  - prometheus.${var.base_domain}

### Monitoring
prometheus:
  auth: '${b64encode(var.prometheus_username + ":" + var.prometheus_password)}'
  host: prometheus.${var.base_domain}

grafana:
  user: '${b64encode(var.grafana_username)}'
  password: '${b64encode(var.grafana_password)}'
  host: grafana.${var.base_domain}

alertmanager:
  # TODO
  auth: 'xxxxx'
  host: alertmanager.${var.base_domain}
  config:
    global:
      slack_api_url: https://hooks.slack.com/services/xxxxxxx/xxxxx
    route:
      receiver: 'default-receiver'
      group_by: ['alertname', 'cluster']
      group_wait: 10s
      group_interval: 5m
      repeat_interval: 1h
    receivers:
    - name: 'default-receiver'
      slack_configs:
      - channel: '#alerting-syseleven'
        send_resolved: true
        icon_emoji: ':prometheus:'
        title: 'syseleven'
        text: ''
    - name: 'notify'
      slack_configs:
      - channel: '#alerting-syseleven'
        send_resolved: true
        icon_emoji: ':prometheus:'
        title: 'syseleven'
        text: ''
    templates:
    - '*.tmpl'

dex:
  ingress:
    host: ${var.base_domain}
  clients:
  - id: ${var.kubermatic_client_id}
    name: Kubermatic
    # example-app-secret
    secret: ZXhhbXBsZS1hcHAtc2VjcmV0
    RedirectURIs:
    - http://localhost:8000
    - http://localhost:8000/clusters
    - https://${var.base_domain}
    - https://${var.base_domain}/clusters
  connectors:
  - type: github
    id: github
    name: GitHub
    config:
      clientID: ${var.gh_client_id}
      clientSecret: ${var.gh_client_secret}
      redirectURI: https://${var.base_domain}/dex/callback
      orgs:
      - name: ${var.gh_orga_name}
